name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: []

  workflow_dispatch:

jobs:
  pre-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: vet
        run: go vet ./...

      - name: test
        run: go test ./...

  build:
    runs-on: ubuntu-latest

    needs: pre-build

    strategy:
      matrix:
        include:
          - target: linux
            arch: amd64
          - target: windows
            arch: amd64
          - target: darwin
            arch: amd64
          - target: darwin
            arch: arm64

    env:
      GOOS: ${{ matrix.target }}
      GOARCH: ${{ matrix.arch }}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16

      - name: build
        run: go build

      - name: create artifacts dir
        run: mkdir artifacts

      - name: copy settings
        run: cp settings_example.json artifacts/settings.json

      - name: copy static
        run: cp -r static artifacts/

      - name: copy MovieNight
        run: cp MovieNight* artifacts/

      - uses: actions/upload-artifact@v3
        with:
          name: MovieNight-${{ matrix.target }}-${{ matrix.arch }}
          if-no-files-found: error
          path: artifacts/*

  test-ui:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: MovieNight-linux-amd64

      - name: test
        run: ./MovieNight & cd _uitests && go test
